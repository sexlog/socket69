{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/adapters/adapter.js","src/adapters/socket-cluster.js","src/provider.js","src/socket69.js","src/util/noop.js","src/util/ucfirst.js"],"names":[],"mappings":"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","file":"socket69.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","const noop    = require('../util/noop'),\n      ucfirst = require('../util/ucfirst');\n\nclass Adapter {\n\n    constructor(config) {\n\n        /**\n         * Connection configuration\n         * @type {*}\n         */\n        this.config = config;\n\n        /**\n         * Socket's connection instance\n         * @type {null}\n         */\n        this.socket = null;\n\n        /**\n         * Required parameters for connection\n         * @type {Array}\n         */\n        this.requiredOptions = [];\n\n        /**\n         *\n         * @type {noop}\n         */\n        this.on = noop;\n\n        /**\n         *\n         * @type {[*]}\n         */\n        this.events = [\n            'error',\n            'connect',\n            'disconnect',\n            'subscribe'\n        ];\n    }\n\n    connect(options) {\n        this.requiredOptions.forEach(option => {\n            if (!options[option]) {\n                throw new Error(`Required parameter \"${option}\" not found`);\n            }\n        });\n    }\n\n    disconnect() {\n    }\n\n    subscribe() {\n    }\n\n    publish() {\n    }\n\n    addListeners() {\n        this.events.forEach(event => {\n            this.socket.on(event, (data) => {\n                event = ucfirst(event, 'on');\n                this[event].apply(this, [data]);\n            });\n        });\n    }\n\n    onError(data) {\n        this.on('error', data);\n    }\n\n    onConnect(data) {\n        this.on('connect', data);\n    }\n\n    onDisconnect(data) {\n        this.on('disconnect', data);\n    }\n\n    onSubscribe(data) {\n        this.on('subscribe', data);\n    }\n}\n\nmodule.exports = Adapter;","const Adapter = require('./adapter');\n\nclass SocketClusterAdapter extends Adapter {\n\n    /**\n     *\n     * @param config\n     */\n    constructor(config) {\n\n        // SocketCluster is required\n        if (!window.socketCluster) {\n            throw new ReferenceError('SocketCluster not found');\n        }\n\n        super(config);\n\n        this.requiredOptions = ['hostname', 'port'];\n    }\n\n    /**\n     *\n     * @param options\n     */\n    connect(options) {\n\n        options = Object.assign({}, this.config, options);\n\n        super.connect(options);\n\n        this.socket = window.socketCluster.connect(options);\n\n        this.addListeners();\n    }\n\n    /**\n     *\n     * @param channel\n     * @param callback\n     */\n    subscribe(channel, callback) {\n        this.socket.subscribe(channel);\n        this.socket.watch(channel, callback);\n    }\n\n    /**\n     *\n     * @param channel\n     * @param data\n     */\n    publish(channel, data) {\n        this.socket.publish(channel, data);\n    }\n}\n\nmodule.exports = SocketClusterAdapter;","const SocketClusterAdapter = require('./adapters/socket-cluster');\n\nclass Provider {\n\n    /**\n     *\n     * @param name\n     * @param options\n     */\n    constructor(name, options) {\n\n        /**\n         *\n         * @type {{socket-cluster: SocketClusterAdapter}}\n         */\n        const list = {\n            'socket-cluster': SocketClusterAdapter\n        };\n\n        return new list[name](options);\n    }\n}\n\nmodule.exports = Provider;","const Provider = require('./provider'),\n      noop     = require('./util/noop'),\n      ucfirst  = require('./util/ucfirst');\n\nexport class Socket69 {\n\n    /**\n     *\n     * @param provider\n     * @param options\n     */\n    constructor(provider, options) {\n\n        /**\n         *\n         * @type {Provider}\n         * @private\n         */\n        this._provider = new Provider(provider, options);\n\n        this._provider.on = (eventName, data) => {\n            this.on(eventName, data);\n        };\n\n        /**\n         *\n         * @type {Array}\n         * @private\n         */\n        this._channels = [];\n\n        /**\n         *\n         * @type {null}\n         */\n        this.onError = noop;\n\n        /**\n         *\n         * @type {null}\n         */\n        this.onConnect = noop;\n\n        /**\n         *\n         * @type {null}\n         */\n        this.onDisconnect = noop;\n\n        /**\n         *\n         * @type {null}\n         */\n        this.onSubscribe = noop;\n    }\n\n    /**\n     *\n     * @param options\n     * @returns {*}\n     */\n    connect(options = {}) {\n        return this._provider.connect(options);\n    }\n\n    /**\n     *\n     * @param channel\n     * @param callback\n     */\n    subscribe(channel, callback) {\n\n        if (!channel) {\n            throw new ReferenceError('Channel name was not provided');\n        }\n\n        this._channels.push(channel);\n\n        this._provider.subscribe(channel, callback);\n    }\n\n    /**\n     *\n     * @param channel\n     * @param data\n     */\n    publish(channel, data) {\n        this._provider.publish(channel, data);\n    }\n\n    /**\n     *\n     * @param eventName\n     * @param data\n     */\n    on(eventName, data) {\n        eventName = ucfirst(eventName, 'on');\n        this[eventName].apply(this, [data]);\n    }\n\n}\n\nwindow.Socket69 = Socket69;\n\nif (typeof define === 'function' && define.amd) {\n    define([], function() {\n        'use strict';\n        return Socket69;\n    });\n}","function noop() {\n}\n\nmodule.exports = noop;","module.exports = function ucfirst(string, prefix = '') {\n    return prefix + string.charAt(0).toUpperCase() + string.substr(1);\n};"],"preExisting":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}